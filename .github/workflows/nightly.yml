name: Nightly Build
on:
  workflow_dispatch: # Allows manual trigger
  schedule:
    - cron: '0 0 * * *'

jobs:
  confirm_build:
    name: Confim Build
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if build is needed
        id: should_run
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT="$(git rev-list --after="24 hours" ${{ github.sha }} -- '**/*.swift' | head -n 1)"
          if [[ -z $COMMIT ]]; then
            echo "::set-output name=should_run::false"
            exit 0
          fi
          STATUS="$(gh api -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    "/repos/ecdye/macSubtitleOCR/actions/runs?branch=main&head_sha=${COMMIT}&status=completed" | \
                    jq '.workflow_runs[] | select(.name == "Test") | .conclusion')"
          if [[ $STATUS == "\"success\"" ]]; then
            echo "::set-output name=should_run::true"
          else
            echo "::set-output name=should_run::false"
          fi

  nightly:
    name: Nightly Build
    runs-on: macos-latest
    needs: confirm_build
    if: ${{ needs.confirm_build.outputs.should_run == 'true' }} || ${{ github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6.1.0
      with:
        gpg_private_key: "${{ secrets.RELEASE_GPG_PRIVATE_KEY }}"
        passphrase: "${{ secrets.RELEASE_GPG_PASSPHRASE }}"

    - name: Install FFmpeg
      run: brew install ffmpeg

    - name: Select Xcode
      uses: mxcl/xcodebuild@v3
      with:
        swift: '6.0'
        action: none

    - name: Build Standalone
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sha=$(git rev-parse --short HEAD)
        xcrun swift build --configuration release --arch arm64
        tar -cvJf macSubtitleOCR-nightly-${sha}.tar.xz -C .build/release/ macSubtitleOCR
        gpg --detach-sign --armor macSubtitleOCR-nightly-${sha}.tar.xz
        gpg --verify macSubtitleOCR-nightly-${sha}.tar.xz.asc macSubtitleOCR-nightly-${sha}.tar.xz
        gh release delete --yes --cleanup-tag nightly

    - name: Build with FFmpeg
      run: |
        mv Package.swift Package.standalone.swift
        mv Package.ffmpeg.swift Package.swift
        sha=$(git rev-parse --short HEAD)
        xcrun swift build -Xswiftc -DFFMPEG --configuration release --arch arm64
        tar -cvJf macSubtitleOCR-nightly-ffmpeg-${sha}.tar.xz -C .build/release/ macSubtitleOCR
        gpg --detach-sign --armor macSubtitleOCR-ffmpeg-${sha}.tar.xz
        gpg --verify macSubtitleOCR-nightly-ffmpeg-${sha}.tar.xz.asc macSubtitleOCR-nightly-ffmpeg-${sha}.tar.xz


    - name: Publish
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Nightly Build
        tag_name: nightly
        prerelease: true
        files: |
          macSubtitleOCR-nightly-*.tar.xz
          macSubtitleOCR-nightly-*.tar.xz.asc
