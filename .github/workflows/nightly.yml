name: Nightly Build
on:
  workflow_dispatch: # Allows manual trigger
  schedule:
    - cron: '0 0 * * *'

jobs:
  check_commit:
    name: Check latest commit
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check latest commit
        id: should_run
        continue-on-error: true
        if: ${{ github.event_name == 'schedule' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          STATUS="$(gh api -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    "/repos/ecdye/macSubtitleOCR/actions/runs?branch=main&head_sha=${{ github.sha }}&status=completed" | \
                    jq '.workflow_runs[] | select(.name == "Build") | .conclusion')"
          COMMIT="$(git rev-list  --after="24 hours" ${{ github.sha }})""
          if [[ $STATUS == "\"success\"" ]] && [[ -n $COMMIT ]]; then
            echo "::set-output name=should_run::true"
          else
            echo "::set-output name=should_run::false"
          fi

  nightly:
    name: Nightly Build
    runs-on: macos-latest
    needs: check_commit
    if: ${{ needs.check_commit.outputs.should_run != 'false' }}
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6.1.0
      with:
        gpg_private_key: "${{ secrets.RELEASE_GPG_PRIVATE_KEY }}"
        passphrase: "${{ secrets.RELEASE_GPG_PASSPHRASE }}"

    - name: Install FFmpeg
      run: brew install ffmpeg

    - name: Select Xcode
      uses: mxcl/xcodebuild@v3
      with:
        swift: '6.0'
        action: none

    - name: Build
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        xcrun swift build --configuration release --arch arm64
        tar -cvJf macSubtitleOCR-nightly-${{ github.ref_name }}.tar.xz -C .build/release/ macSubtitleOCR
        gpg --detach-sign --armor macSubtitleOCR-nightly-${{ github.ref_name }}.tar.xz
        gpg --verify macSubtitleOCR-nightly-${{ github.ref_name }}.tar.xz.asc macSubtitleOCR-nightly-${{ github.ref_name }}.tar.xz
        gh release delete --yes --cleanup-tag nightly

    - name: Publish
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Nightly Build
        tag_name: nightly
        prerelease: true
        files: |
          macSubtitleOCR-nightly-${{ github.ref_name }}.tar.xz
          macSubtitleOCR-nightly-${{ github.ref_name }}.tar.xz.asc
